{"version":3,"sources":["logo.svg","query2YahooFinanceV8.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getQuery2FinanceYahooV8","symbol","interval","period1","period2","a","fetch","headers","res","ok","json","undefined","getTimeStamp","date","Math","floor","getTime","App","React","useState","purchase","amount","timeStamp","Date","shares","useEffect","responses","forEach","s","minTimestamp","min","apply","map","p","nowTimestamp","push","apiCallFuc","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,MAA0B,iC,MCsElC,SAAeA,EAAtB,wC,4CAAO,WACLC,EACAC,EACAC,EACAC,GAJK,eAAAC,EAAA,sEAMaC,MAAM,uFAAgFL,GAAhF,yCACYC,EADZ,oBACgCC,EADhC,oBACmDC,GAAW,CAACG,QAAS,CAAC,mBAAmB,oBAP/G,YAMCC,EAND,QAQGC,GARH,gCASWD,EAAIE,OATf,6EAWEC,GAXF,4C,iCC7CP,SAASC,EAAaC,GACpB,OAAOC,KAAKC,MAAOF,EAAKG,UAAU,KAIpC,IAkDeC,EAlDH,WAAO,IAAD,EAEYC,IAAMC,SAChC,CACE,CAAClB,OAAQ,OAAQmB,SAAU,CACzB,CAACC,OAAO,EAAGC,UAAWV,EAAa,IAAIW,KAAK,yBAC5C,CAACF,OAAO,EAAGC,UAAWV,EAAa,IAAIW,KAAK,yBAC5C,CAACF,OAAO,EAAGC,UAAWV,EAAa,IAAIW,KAAK,6BAPlC,mBAETC,EAFS,UA8BhB,OAnBAN,IAAMO,WAAU,WACd,QAAed,IAAXa,EAAJ,CACA,IAAME,EAA4B,GAElCF,EAAOG,SAAQ,SAAAC,GACb,IAAMC,EAAef,KAAKgB,IAAIC,MAAM,KAAKH,EAAER,SAASY,KAAI,SAAAC,GAAC,OAAEA,EAAEX,cACvDY,EAAetB,EAAa,IAAIW,OACtB,uCAAG,4BAAAlB,EAAA,sEACEL,EAAwB4B,EAAE3B,OAAQ,KAAM4B,EAAcK,GADxD,YAEJvB,KADNH,EADU,SAGdkB,EAAUS,KAAK,CAAClC,OAAQ2B,EAAE3B,OAAQO,QAHpB,2CAAH,qDAMhB4B,SAID,CAACZ,IAGF,qBAAKa,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCrDOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6057e5a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\r\nexport interface Pre {\r\n    timezone: string;\r\n    start: number;\r\n    end: number;\r\n    gmtoffset: number;\r\n}\r\nexport interface Regular {\r\n    timezone: string;\r\n    start: number;\r\n    end: number;\r\n    gmtoffset: number;\r\n}\r\nexport interface Post {\r\n    timezone: string;\r\n    start: number;\r\n    end: number;\r\n    gmtoffset: number;\r\n}\r\nexport interface CurrentTradingPeriod {\r\n    pre: Pre;\r\n    regular: Regular;\r\n    post: Post;\r\n}\r\nexport interface Meta {\r\n    currency: string;\r\n    symbol: string;\r\n    exchangeName: string;\r\n    instrumentType: string;\r\n    firstTradeDate: number;\r\n    regularMarketTime: number;\r\n    gmtoffset: number;\r\n    timezone: string;\r\n    exchangeTimezoneName: string;\r\n    regularMarketPrice: number;\r\n    chartPreviousClose: number;\r\n    priceHint: number;\r\n    currentTradingPeriod: CurrentTradingPeriod;\r\n    dataGranularity: string;\r\n    range: string;\r\n    validRanges: string[];\r\n}\r\nexport interface Quote {\r\n    close: number[];\r\n    high: number[];\r\n    open: number[];\r\n    volume: number[];\r\n    low: number[];\r\n}\r\nexport interface Adjclose {\r\n    adjclose: number[];\r\n}\r\nexport interface Indicators {\r\n    quote: Quote[];\r\n    adjclose: Adjclose[];\r\n}\r\nexport interface Result {\r\n    meta: Meta;\r\n    timestamp: number[];\r\n    indicators: Indicators;\r\n}\r\nexport interface Chart {\r\n    result: Result[];\r\n    error?: any;\r\n}\r\nexport interface Query2YahooFinanceV8 {\r\n    chart: Chart;\r\n}\r\n\r\n\r\nexport async function getQuery2FinanceYahooV8(\r\n  symbol:string,\r\n  interval:string,\r\n  period1:number,\r\n  period2:number) : Promise<Query2YahooFinanceV8 | undefined> {\r\n  //&corsDomain=finance.yahoo.com&.tsrc=finance\r\n  const res = await fetch(`http://corsproxy.cloudno.de/http://query2.finance.yahoo.com/v8/finance/chart/${symbol}`+\r\n    `?region=US&lang=en-US&interval=${interval}&period1=${period1}&period2=${period2}`, {headers: {\"X-Requested-With\":\"XMLHttpRequest\"}})\r\n  if (res.ok) {\r\n    return (await res.json()) as Query2YahooFinanceV8;\r\n  }\r\n  return undefined\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { getQuery2FinanceYahooV8, Query2YahooFinanceV8 } from './query2YahooFinanceV8';\r\n\r\ninterface Share {\r\n  symbol: string;\r\n  purchase: Purchase[];  \r\n}\r\n\r\ninterface Purchase {\r\n  timeStamp: number;\r\n  amount: number;  \r\n}\r\n\r\ninterface ApiResponse{\r\n  symbol: string;\r\n  res: Query2YahooFinanceV8;\r\n}\r\n\r\n// function getDateDiff(date1: Date, date2: Date) : number {\r\n//   var diff = Math.abs(date1.getTime() - date2.getTime());\r\n//   return Math.ceil(diff / (1000 * 3600 * 24));\r\n// }\r\n\r\nfunction getTimeStamp(date: Date) : number {\r\n  return Math.floor( date.getTime()/1000)\r\n}\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [shares, setShares] = React.useState<Share[]>(\r\n    [\r\n      {symbol: \"MSFT\", purchase: [\r\n        {amount:1, timeStamp: getTimeStamp(new Date(\"2021-05-01T19:00:00\"))}, \r\n        {amount:2, timeStamp: getTimeStamp(new Date(\"2021-07-01T19:00:00\"))}, \r\n        {amount:3, timeStamp: getTimeStamp(new Date(\"2021-08-01T19:00:00\"))},\r\n      ]}\r\n    ]);\r\n\r\n  React.useEffect(() => {\r\n    if (shares === undefined) return;\r\n    const responses : ApiResponse[] = [];\r\n\r\n    shares.forEach(s => {\r\n      const minTimestamp = Math.min.apply(null,s.purchase.map(p=>p.timeStamp));     \r\n      const nowTimestamp = getTimeStamp(new Date());\r\n      const apiCallFuc = async () =>  {        \r\n         const res = await getQuery2FinanceYahooV8(s.symbol, \"1d\", minTimestamp, nowTimestamp);\r\n         if (res !== undefined){\r\n           responses.push({symbol: s.symbol, res});\r\n         }\r\n      };\r\n      apiCallFuc();\r\n\r\n    });   \r\n    \r\n  }, [shares]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.tsx</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}